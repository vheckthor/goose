# Configuration for cross-compiling using cross
[target.aarch64-unknown-linux-gnu]
xargo = false
pre-build = [
    # Add the ARM64 architecture and install necessary dependencies
    "dpkg --add-architecture arm64",
    """\
    apt-get update --fix-missing && apt-get install -y \
     curl \
     unzip \
     pkg-config \
     libssl-dev:arm64 \
     libdbus-1-dev:arm64 \
     libxcb1-dev:arm64
    """,
    """\
    curl -LO https://github.com/protocolbuffers/protobuf/releases/download/v31.1/protoc-31.1-linux-x86_64.zip && \
    unzip -o protoc-31.1-linux-x86_64.zip -d /usr/local && \
    chmod +x /usr/local/bin/protoc && \
    ln -sf /usr/local/bin/protoc /usr/bin/protoc && \
    which protoc && \
    protoc --version
    """
]

[target.x86_64-unknown-linux-gnu]
xargo = false
pre-build = [
    """\
    apt-get update && apt-get install -y \
     curl \
     unzip \
     pkg-config \
     libssl-dev \
     libdbus-1-dev \
     libxcb1-dev
    """,
    """\
    curl -LO https://github.com/protocolbuffers/protobuf/releases/download/v31.1/protoc-31.1-linux-x86_64.zip && \
    unzip -o protoc-31.1-linux-x86_64.zip -d /usr/local && \
    chmod +x /usr/local/bin/protoc && \
    ln -sf /usr/local/bin/protoc /usr/bin/protoc && \
    which protoc && \
    protoc --version
    """
]

[target.x86_64-pc-windows-gnu]
image = "ghcr.io/cross-rs/x86_64-pc-windows-gnu:latest"
env = { "RUST_LOG" = "debug", "RUST_BACKTRACE" = "1", "CROSS_VERBOSE" = "1", "PKG_CONFIG_ALLOW_CROSS" = "1" }
pre-build = [
    """\
    apt-get update && apt-get install -y \
     curl \
     unzip
    """,
    """\
    curl -LO https://github.com/protocolbuffers/protobuf/releases/download/v31.1/protoc-31.1-linux-x86_64.zip && \
    unzip protoc-31.1-linux-x86_64.zip -d /usr/local && \
    chmod +x /usr/local/bin/protoc && \
    export PROTOC=/usr/local/bin/protoc && \
    protoc --version
    """
]
